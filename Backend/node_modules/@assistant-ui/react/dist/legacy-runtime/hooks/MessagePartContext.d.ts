import { MessagePartRuntime } from "../runtime/MessagePartRuntime";
export declare function useMessagePartRuntime(options?: {
    optional?: false | undefined;
}): MessagePartRuntime;
export declare function useMessagePartRuntime(options?: {
    optional?: boolean | undefined;
}): MessagePartRuntime | null;
export declare const useMessagePart: {
    (): import("../runtime").MessagePartState;
    <TSelected>(selector: (state: import("../runtime").MessagePartState) => TSelected): TSelected;
    <TSelected>(selector: ((state: import("../runtime").MessagePartState) => TSelected) | undefined): import("../runtime").MessagePartState | TSelected;
    (options: {
        optional?: false | undefined;
    }): import("../runtime").MessagePartState;
    (options: {
        optional?: boolean | undefined;
    }): import("../runtime").MessagePartState | null;
    <TSelected>(options: {
        optional?: false | undefined;
        selector: (state: import("../runtime").MessagePartState) => TSelected;
    }): TSelected;
    <TSelected>(options: {
        optional?: false | undefined;
        selector: ((state: import("../runtime").MessagePartState) => TSelected) | undefined;
    }): import("../runtime").MessagePartState | TSelected;
    <TSelected>(options: {
        optional?: boolean | undefined;
        selector: (state: import("../runtime").MessagePartState) => TSelected;
    }): TSelected | null;
    <TSelected>(options: {
        optional?: boolean | undefined;
        selector: ((state: import("../runtime").MessagePartState) => TSelected) | undefined;
    }): import("../runtime").MessagePartState | TSelected | null;
};
//# sourceMappingURL=MessagePartContext.d.ts.map