{"version":3,"sources":["../../../../src/legacy-runtime/runtime-cores/external-store/createMessageConverter.tsx"],"sourcesContent":["\"use client\";\nimport { ThreadState } from \"../../runtime\";\nimport { useAssistantApi, useAssistantState } from \"../../../context\";\nimport { ThreadMessage } from \"../../../types\";\nimport {\n  useExternalMessageConverter,\n  convertExternalMessages,\n} from \"./external-message-converter\";\nimport { getExternalStoreMessages } from \"./getExternalStoreMessage\";\n\nexport const createMessageConverter = <T extends object>(\n  callback: useExternalMessageConverter.Callback<T>,\n) => {\n  const result = {\n    useThreadMessages: ({\n      messages,\n      isRunning,\n      joinStrategy,\n    }: {\n      messages: T[];\n      isRunning: boolean;\n      joinStrategy?: \"concat-content\" | \"none\" | undefined;\n    }) => {\n      return useExternalMessageConverter<T>({\n        callback,\n        messages,\n        isRunning,\n        joinStrategy,\n      });\n    },\n    toThreadMessages: (messages: T[], isRunning = false) => {\n      return convertExternalMessages(messages, callback, isRunning);\n    },\n    toOriginalMessages: (\n      input: ThreadState | ThreadMessage | ThreadMessage[\"content\"][number],\n    ) => {\n      const messages = getExternalStoreMessages(input);\n      if (messages.length === 0) throw new Error(\"No original messages found\");\n      return messages;\n    },\n    toOriginalMessage: (\n      input: ThreadState | ThreadMessage | ThreadMessage[\"content\"][number],\n    ) => {\n      const messages = result.toOriginalMessages(input);\n      return messages[0]!;\n    },\n    useOriginalMessage: () => {\n      const messageMessages = result.useOriginalMessages();\n      const first = messageMessages[0]!;\n      return first;\n    },\n    useOriginalMessages: () => {\n      const api = useAssistantApi();\n      const partMessages = useAssistantState((s) => {\n        if (api.part.source) return getExternalStoreMessages(s.part);\n        return undefined;\n      });\n\n      const messageMessages = useAssistantState<T[]>(({ message }) =>\n        getExternalStoreMessages(message),\n      );\n\n      const messages = partMessages ?? messageMessages;\n      if (messages.length === 0) throw new Error(\"No original messages found\");\n      return messages;\n    },\n  };\n\n  return result;\n};\n"],"mappings":";;;AAEA,SAAS,iBAAiB,yBAAyB;AAEnD;AAAA,EACE;AAAA,EACA;AAAA,OACK;AACP,SAAS,gCAAgC;AAElC,IAAM,yBAAyB,CACpC,aACG;AACH,QAAM,SAAS;AAAA,IACb,mBAAmB,CAAC;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,IACF,MAIM;AACJ,aAAO,4BAA+B;AAAA,QACpC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA,IACA,kBAAkB,CAAC,UAAe,YAAY,UAAU;AACtD,aAAO,wBAAwB,UAAU,UAAU,SAAS;AAAA,IAC9D;AAAA,IACA,oBAAoB,CAClB,UACG;AACH,YAAM,WAAW,yBAAyB,KAAK;AAC/C,UAAI,SAAS,WAAW,EAAG,OAAM,IAAI,MAAM,4BAA4B;AACvE,aAAO;AAAA,IACT;AAAA,IACA,mBAAmB,CACjB,UACG;AACH,YAAM,WAAW,OAAO,mBAAmB,KAAK;AAChD,aAAO,SAAS,CAAC;AAAA,IACnB;AAAA,IACA,oBAAoB,MAAM;AACxB,YAAM,kBAAkB,OAAO,oBAAoB;AACnD,YAAM,QAAQ,gBAAgB,CAAC;AAC/B,aAAO;AAAA,IACT;AAAA,IACA,qBAAqB,MAAM;AACzB,YAAM,MAAM,gBAAgB;AAC5B,YAAM,eAAe,kBAAkB,CAAC,MAAM;AAC5C,YAAI,IAAI,KAAK,OAAQ,QAAO,yBAAyB,EAAE,IAAI;AAC3D,eAAO;AAAA,MACT,CAAC;AAED,YAAM,kBAAkB;AAAA,QAAuB,CAAC,EAAE,QAAQ,MACxD,yBAAyB,OAAO;AAAA,MAClC;AAEA,YAAM,WAAW,gBAAgB;AACjC,UAAI,SAAS,WAAW,EAAG,OAAM,IAAI,MAAM,4BAA4B;AACvE,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;","names":[]}