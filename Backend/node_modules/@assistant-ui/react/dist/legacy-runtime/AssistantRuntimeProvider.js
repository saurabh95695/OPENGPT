"use client";

// src/legacy-runtime/AssistantRuntimeProvider.tsx
import { memo } from "react";
import { AssistantProvider } from "../context/react/AssistantApiContext.js";
import { useAssistantClient } from "../client/AssistantClient.js";
import { ThreadListClient } from "./client/ThreadListRuntimeClient.js";
import { jsx, jsxs } from "react/jsx-runtime";
var getRenderComponent = (runtime) => {
  return runtime._core?.RenderComponent;
};
var AssistantRuntimeProviderImpl = ({
  children,
  runtime
}) => {
  const api = useAssistantClient({
    threads: ThreadListClient({
      runtime: runtime.threads
    }),
    registerModelContextProvider: runtime.registerModelContextProvider,
    __internal_runtime: runtime
  });
  const RenderComponent = getRenderComponent(runtime);
  return /* @__PURE__ */ jsxs(AssistantProvider, { api, children: [
    RenderComponent && /* @__PURE__ */ jsx(RenderComponent, {}),
    children
  ] });
};
var AssistantRuntimeProvider = memo(AssistantRuntimeProviderImpl);
export {
  AssistantRuntimeProvider,
  AssistantRuntimeProviderImpl
};
//# sourceMappingURL=AssistantRuntimeProvider.js.map