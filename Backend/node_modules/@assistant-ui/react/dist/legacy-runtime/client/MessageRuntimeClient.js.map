{"version":3,"sources":["../../../src/legacy-runtime/client/MessageRuntimeClient.ts"],"sourcesContent":["import {\n  resource,\n  tapInlineResource,\n  tapMemo,\n  tapState,\n} from \"@assistant-ui/tap\";\nimport { tapApi } from \"../../utils/tap-store\";\nimport { MessageRuntime } from \"../runtime/MessageRuntime\";\nimport { tapSubscribable } from \"../util-hooks/tapSubscribable\";\nimport { ComposerClient } from \"./ComposerRuntimeClient\";\nimport { MessagePartClient } from \"./MessagePartRuntimeClient\";\nimport { tapLookupResources } from \"../../client/util-hooks/tapLookupResources\";\nimport { RefObject } from \"react\";\nimport {\n  MessageClientState,\n  MessageClientApi,\n} from \"../../client/types/Message\";\nimport { AttachmentRuntimeClient } from \"./AttachmentRuntimeClient\";\n\nconst MessageAttachmentClientByIndex = resource(\n  ({ runtime, index }: { runtime: MessageRuntime; index: number }) => {\n    const attachmentRuntime = tapMemo(\n      () => runtime.getAttachmentByIndex(index),\n      [runtime, index],\n    );\n    return tapInlineResource(\n      AttachmentRuntimeClient({ runtime: attachmentRuntime }),\n    );\n  },\n);\n\nconst MessagePartByIndex = resource(\n  ({ runtime, index }: { runtime: MessageRuntime; index: number }) => {\n    const partRuntime = tapMemo(\n      () => runtime.getMessagePartByIndex(index),\n      [runtime, index],\n    );\n    return tapInlineResource(MessagePartClient({ runtime: partRuntime }));\n  },\n);\n\nexport const MessageClient = resource(\n  ({\n    runtime,\n    threadIdRef,\n  }: {\n    runtime: MessageRuntime;\n    threadIdRef: RefObject<string>;\n  }) => {\n    const runtimeState = tapSubscribable(runtime);\n\n    const [isCopiedState, setIsCopied] = tapState(false);\n    const [isHoveringState, setIsHovering] = tapState(false);\n\n    const messageIdRef = tapMemo(\n      () => ({\n        get current() {\n          return runtime.getState().id;\n        },\n      }),\n      [runtime],\n    );\n\n    const composer = tapInlineResource(\n      ComposerClient({\n        runtime: runtime.composer,\n        threadIdRef,\n        messageIdRef,\n      }),\n    );\n\n    const parts = tapLookupResources(\n      runtimeState.content.map((_, idx) =>\n        MessagePartByIndex({ runtime, index: idx }, { key: idx }),\n      ),\n    );\n\n    const attachments = tapLookupResources(\n      runtimeState.attachments?.map((_, idx) =>\n        MessageAttachmentClientByIndex({ runtime, index: idx }, { key: idx }),\n      ) ?? [],\n    );\n\n    const state = tapMemo<MessageClientState>(() => {\n      return {\n        ...(runtimeState as MessageClientState),\n\n        parts: parts.state,\n        composer: composer.state,\n\n        isCopied: isCopiedState,\n        isHovering: isHoveringState,\n      };\n    }, [\n      runtimeState,\n      parts.state,\n      composer.state,\n      isCopiedState,\n      isHoveringState,\n    ]);\n\n    return tapApi<MessageClientApi>(\n      {\n        getState: () => state,\n\n        composer: composer.api,\n\n        reload: (config) => runtime.reload(config),\n        speak: () => runtime.speak(),\n        stopSpeaking: () => runtime.stopSpeaking(),\n        submitFeedback: (feedback) => runtime.submitFeedback(feedback),\n        switchToBranch: (options) => runtime.switchToBranch(options),\n        getCopyText: () => runtime.unstable_getCopyText(),\n\n        part: (selector) => {\n          if (\"index\" in selector) {\n            return parts.api({ index: selector.index });\n          } else {\n            return parts.api({ key: \"toolCallId-\" + selector.toolCallId });\n          }\n        },\n\n        attachment: (selector) => {\n          if (\"id\" in selector) {\n            return attachments.api({ key: selector.id });\n          } else {\n            return attachments.api(selector);\n          }\n        },\n\n        setIsCopied,\n        setIsHovering,\n\n        __internal_getRuntime: () => runtime,\n      },\n      {\n        key: runtimeState.id,\n      },\n    );\n  },\n);\n"],"mappings":"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","names":[]}