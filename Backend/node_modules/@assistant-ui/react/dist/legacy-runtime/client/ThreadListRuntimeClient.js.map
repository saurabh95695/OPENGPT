{"version":3,"sources":["../../../src/legacy-runtime/client/ThreadListRuntimeClient.ts"],"sourcesContent":["import { tapApi } from \"../../utils/tap-store\";\nimport { resource, tapInlineResource, tapMemo } from \"@assistant-ui/tap\";\nimport { ThreadListRuntime } from \"../runtime/ThreadListRuntime\";\nimport { tapSubscribable } from \"../util-hooks/tapSubscribable\";\nimport { ThreadListItemClient } from \"./ThreadListItemRuntimeClient\";\nimport { ThreadClient } from \"./ThreadRuntimeClient\";\nimport { tapLookupResources } from \"../../client/util-hooks/tapLookupResources\";\nimport {\n  ThreadListClientState,\n  ThreadListClientApi,\n} from \"../../client/types/ThreadList\";\n\nconst ThreadListItemClientById = resource(\n  ({ runtime, id }: { runtime: ThreadListRuntime; id: string }) => {\n    const threadListItemRuntime = tapMemo(\n      () => runtime.getItemById(id),\n      [runtime, id],\n    );\n    return tapInlineResource(\n      ThreadListItemClient({\n        runtime: threadListItemRuntime,\n      }),\n    );\n  },\n);\n\nexport const ThreadListClient = resource(\n  ({ runtime }: { runtime: ThreadListRuntime }) => {\n    const runtimeState = tapSubscribable(runtime);\n\n    const main = tapInlineResource(\n      ThreadClient({\n        runtime: runtime.main,\n      }),\n    );\n\n    const threadItems = tapLookupResources(\n      Object.keys(runtimeState.threadItems).map((id) =>\n        ThreadListItemClientById({ runtime, id }, { key: id }),\n      ),\n    );\n\n    const state = tapMemo<ThreadListClientState>(() => {\n      return {\n        mainThreadId: runtimeState.mainThreadId,\n        newThreadId: runtimeState.newThread ?? null,\n        isLoading: runtimeState.isLoading,\n        threadIds: runtimeState.threads,\n        archivedThreadIds: runtimeState.archivedThreads,\n        threadItems: threadItems.state,\n\n        main: main.state,\n      };\n    }, [runtimeState, threadItems.state, main.state]);\n\n    return tapApi<ThreadListClientApi>({\n      getState: () => state,\n\n      thread: () => main.api,\n\n      item: (threadIdOrOptions) => {\n        if (threadIdOrOptions === \"main\") {\n          return threadItems.api({ key: state.mainThreadId });\n        }\n\n        if (\"id\" in threadIdOrOptions) {\n          return threadItems.api({ key: threadIdOrOptions.id });\n        }\n\n        const { index, archived = false } = threadIdOrOptions;\n        const id = archived\n          ? state.archivedThreadIds[index]!\n          : state.threadIds[index]!;\n        return threadItems.api({ key: id });\n      },\n\n      switchToThread: (threadId) => {\n        runtime.switchToThread(threadId);\n      },\n      switchToNewThread: () => {\n        runtime.switchToNewThread();\n      },\n    });\n  },\n);\n"],"mappings":";AAAA,SAAS,cAAc;AACvB,SAAS,UAAU,mBAAmB,eAAe;AAErD,SAAS,uBAAuB;AAChC,SAAS,4BAA4B;AACrC,SAAS,oBAAoB;AAC7B,SAAS,0BAA0B;AAMnC,IAAM,2BAA2B;AAAA,EAC/B,CAAC,EAAE,SAAS,GAAG,MAAkD;AAC/D,UAAM,wBAAwB;AAAA,MAC5B,MAAM,QAAQ,YAAY,EAAE;AAAA,MAC5B,CAAC,SAAS,EAAE;AAAA,IACd;AACA,WAAO;AAAA,MACL,qBAAqB;AAAA,QACnB,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AAAA,EACF;AACF;AAEO,IAAM,mBAAmB;AAAA,EAC9B,CAAC,EAAE,QAAQ,MAAsC;AAC/C,UAAM,eAAe,gBAAgB,OAAO;AAE5C,UAAM,OAAO;AAAA,MACX,aAAa;AAAA,QACX,SAAS,QAAQ;AAAA,MACnB,CAAC;AAAA,IACH;AAEA,UAAM,cAAc;AAAA,MAClB,OAAO,KAAK,aAAa,WAAW,EAAE;AAAA,QAAI,CAAC,OACzC,yBAAyB,EAAE,SAAS,GAAG,GAAG,EAAE,KAAK,GAAG,CAAC;AAAA,MACvD;AAAA,IACF;AAEA,UAAM,QAAQ,QAA+B,MAAM;AACjD,aAAO;AAAA,QACL,cAAc,aAAa;AAAA,QAC3B,aAAa,aAAa,aAAa;AAAA,QACvC,WAAW,aAAa;AAAA,QACxB,WAAW,aAAa;AAAA,QACxB,mBAAmB,aAAa;AAAA,QAChC,aAAa,YAAY;AAAA,QAEzB,MAAM,KAAK;AAAA,MACb;AAAA,IACF,GAAG,CAAC,cAAc,YAAY,OAAO,KAAK,KAAK,CAAC;AAEhD,WAAO,OAA4B;AAAA,MACjC,UAAU,MAAM;AAAA,MAEhB,QAAQ,MAAM,KAAK;AAAA,MAEnB,MAAM,CAAC,sBAAsB;AAC3B,YAAI,sBAAsB,QAAQ;AAChC,iBAAO,YAAY,IAAI,EAAE,KAAK,MAAM,aAAa,CAAC;AAAA,QACpD;AAEA,YAAI,QAAQ,mBAAmB;AAC7B,iBAAO,YAAY,IAAI,EAAE,KAAK,kBAAkB,GAAG,CAAC;AAAA,QACtD;AAEA,cAAM,EAAE,OAAO,WAAW,MAAM,IAAI;AACpC,cAAM,KAAK,WACP,MAAM,kBAAkB,KAAK,IAC7B,MAAM,UAAU,KAAK;AACzB,eAAO,YAAY,IAAI,EAAE,KAAK,GAAG,CAAC;AAAA,MACpC;AAAA,MAEA,gBAAgB,CAAC,aAAa;AAC5B,gBAAQ,eAAe,QAAQ;AAAA,MACjC;AAAA,MACA,mBAAmB,MAAM;AACvB,gBAAQ,kBAAkB;AAAA,MAC5B;AAAA,IACF,CAAC;AAAA,EACH;AACF;","names":[]}