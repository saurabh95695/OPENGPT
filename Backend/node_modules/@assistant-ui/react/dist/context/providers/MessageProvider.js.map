{"version":3,"sources":["../../../src/context/providers/MessageProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo, type FC, type PropsWithChildren } from \"react\";\nimport {\n  AssistantProvider,\n  AssistantApi,\n  createAssistantApiField,\n} from \"../react/AssistantApiContext\";\nimport {\n  MessageClientApi,\n  MessageClientState,\n} from \"../../client/types/Message\";\nimport {\n  resource,\n  tapInlineResource,\n  tapMemo,\n  tapState,\n} from \"@assistant-ui/tap\";\nimport { useResource } from \"@assistant-ui/tap/react\";\nimport { asStore, tapApi } from \"../../utils/tap-store\";\nimport {\n  ThreadAssistantMessagePart,\n  ThreadMessage,\n  ThreadUserMessagePart,\n} from \"../../types/AssistantTypes\";\nimport {\n  ComposerClientApi,\n  ComposerClientState,\n} from \"../../client/types/Composer\";\nimport {\n  MessagePartClientApi,\n  MessagePartClientState,\n} from \"../../client/types/Part\";\nimport { tapLookupResources } from \"../../client/util-hooks/tapLookupResources\";\nimport { Attachment } from \"../../types\";\nimport { AttachmentClientApi } from \"../../client/types/Attachment\";\n\nconst NoOpComposerClient = resource(({ type }: { type: \"edit\" | \"thread\" }) => {\n  const state = tapMemo<ComposerClientState>(() => {\n    return {\n      isEditing: false,\n      isEmpty: true,\n      text: \"\",\n      attachmentAccept: \"*\",\n      attachments: [],\n      role: \"user\",\n      runConfig: {},\n      canCancel: false,\n      type: type,\n    };\n  }, [type]);\n\n  return tapApi<ComposerClientApi>({\n    getState: () => state,\n    setText: () => {\n      throw new Error(\"Not supported\");\n    },\n    setRole: () => {\n      throw new Error(\"Not supported\");\n    },\n    setRunConfig: () => {\n      throw new Error(\"Not supported\");\n    },\n    addAttachment: () => {\n      throw new Error(\"Not supported\");\n    },\n    clearAttachments: () => {\n      throw new Error(\"Not supported\");\n    },\n    attachment: () => {\n      throw new Error(\"Not supported\");\n    },\n    reset: () => {\n      throw new Error(\"Not supported\");\n    },\n    send: () => {\n      throw new Error(\"Not supported\");\n    },\n    cancel: () => {\n      throw new Error(\"Not supported\");\n    },\n    beginEdit: () => {\n      throw new Error(\"Not supported\");\n    },\n    __internal_getRuntime: () => null,\n  });\n});\n\nconst ThreadMessagePartClient = resource(\n  ({ part }: { part: ThreadAssistantMessagePart | ThreadUserMessagePart }) => {\n    const state = tapMemo<MessagePartClientState>(() => {\n      return {\n        ...part,\n        status: { type: \"complete\" },\n      };\n    }, [part]);\n\n    return tapApi<MessagePartClientApi>(\n      {\n        getState: () => state,\n        addToolResult: () => {\n          throw new Error(\"Not supported\");\n        },\n        __internal_getRuntime: () => null,\n      },\n      {\n        key:\n          state.type === \"tool-call\"\n            ? \"toolCallId-\" + state.toolCallId\n            : undefined,\n      },\n    );\n  },\n);\n\nconst ThreadMessageAttachmentClient = resource(\n  ({ attachment }: { attachment: Attachment }) => {\n    return tapApi<AttachmentClientApi>(\n      {\n        getState: () => attachment,\n        remove: () => {\n          throw new Error(\"Not supported\");\n        },\n        __internal_getRuntime: () => null,\n      },\n      {\n        key: attachment.id,\n      },\n    );\n  },\n);\n\ntype ThreadMessageClientProps = {\n  message: ThreadMessage;\n  isLast?: boolean;\n  branchNumber?: number;\n  branchCount?: number;\n};\n\nconst ThreadMessageClient = resource(\n  ({\n    message,\n    isLast = true,\n    branchNumber = 1,\n    branchCount = 1,\n  }: ThreadMessageClientProps) => {\n    const [isCopiedState, setIsCopied] = tapState(false);\n    const [isHoveringState, setIsHovering] = tapState(false);\n\n    const parts = tapLookupResources(\n      message.content.map((_, idx) =>\n        ThreadMessagePartClient({ part: message.content[idx]! }, { key: idx }),\n      ),\n    );\n\n    const attachments = tapLookupResources(\n      message.attachments?.map((_, idx) =>\n        ThreadMessageAttachmentClient(\n          { attachment: message.attachments![idx]! },\n          { key: idx },\n        ),\n      ) ?? [],\n    );\n\n    const composerState = tapInlineResource(\n      NoOpComposerClient({ type: \"edit\" }),\n    );\n\n    const state = tapMemo<MessageClientState>(() => {\n      return {\n        ...message,\n        parts: parts.state,\n        composer: composerState.state,\n        parentId: null,\n        isLast,\n        branchNumber,\n        branchCount,\n        speech: undefined,\n        submittedFeedback: undefined,\n        isCopied: isCopiedState,\n        isHovering: isHoveringState,\n      };\n    }, [message, isCopiedState, isHoveringState, isLast]);\n\n    return tapApi<MessageClientApi>({\n      getState: () => state,\n      composer: composerState.api,\n      part: (selector) => {\n        if (\"index\" in selector) {\n          return parts.api({ index: selector.index });\n        } else {\n          return parts.api({ key: \"toolCallId-\" + selector.toolCallId });\n        }\n      },\n      attachment: (selector) => {\n        if (\"id\" in selector) {\n          return attachments.api({ key: selector.id });\n        } else {\n          return attachments.api(selector);\n        }\n      },\n      reload: () => {\n        throw new Error(\"Not supported in ThreadMessageProvider\");\n      },\n      speak: () => {\n        throw new Error(\"Not supported in ThreadMessageProvider\");\n      },\n      stopSpeaking: () => {\n        throw new Error(\"Not supported in ThreadMessageProvider\");\n      },\n      submitFeedback: () => {\n        throw new Error(\"Not supported in ThreadMessageProvider\");\n      },\n      switchToBranch: () => {\n        throw new Error(\"Not supported in ThreadMessageProvider\");\n      },\n      getCopyText: () => {\n        return message.content\n          .map((part) => {\n            if (\"text\" in part && typeof part.text === \"string\") {\n              return part.text;\n            }\n            return \"\";\n          })\n          .join(\"\\n\");\n      },\n      setIsCopied,\n      setIsHovering,\n      __internal_getRuntime: () => null,\n    });\n  },\n);\n\nexport const MessageProvider: FC<\n  PropsWithChildren<ThreadMessageClientProps>\n> = ({ children, ...props }) => {\n  const store = useResource(asStore(ThreadMessageClient(props)));\n  const api = useMemo(() => {\n    return {\n      message: createAssistantApiField({\n        source: \"root\",\n        query: {},\n        get: () => store.getState().api,\n      }),\n      subscribe: store.subscribe,\n      flushSync: store.flushSync,\n    } satisfies Partial<AssistantApi>;\n  }, [store]);\n\n  return <AssistantProvider api={api}>{children}</AssistantProvider>;\n};\n"],"mappings":"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","names":[]}