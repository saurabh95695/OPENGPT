{"version":3,"sources":["../../../src/context/providers/TextMessagePartProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo, type FC, type PropsWithChildren } from \"react\";\nimport {\n  AssistantProvider,\n  AssistantApi,\n  createAssistantApiField,\n} from \"../react/AssistantApiContext\";\nimport {\n  MessagePartClientApi,\n  MessagePartClientState,\n} from \"../../client/types/Part\";\nimport { resource, tapMemo } from \"@assistant-ui/tap\";\nimport { useResource } from \"@assistant-ui/tap/react\";\nimport { asStore, tapApi } from \"../../utils/tap-store\";\n\nconst TextMessagePartClient = resource(\n  ({ text, isRunning }: { text: string; isRunning: boolean }) => {\n    const state = tapMemo<MessagePartClientState>(\n      () => ({\n        type: \"text\",\n        text,\n        status: isRunning ? { type: \"running\" } : { type: \"complete\" },\n      }),\n      [text, isRunning],\n    );\n\n    return tapApi<MessagePartClientApi>({\n      getState: () => state,\n      addToolResult: () => {\n        throw new Error(\"Not supported\");\n      },\n      __internal_getRuntime: () => null,\n    });\n  },\n);\n\nexport const TextMessagePartProvider: FC<\n  PropsWithChildren<{\n    text: string;\n    isRunning?: boolean;\n  }>\n> = ({ text, isRunning = false, children }) => {\n  const store = useResource(\n    asStore(TextMessagePartClient({ text, isRunning })),\n  );\n  const api = useMemo(() => {\n    return {\n      part: createAssistantApiField({\n        source: \"root\",\n        query: {},\n        get: () => store.getState().api,\n      }),\n      subscribe: store.subscribe,\n      flushSync: store.flushSync,\n    } satisfies Partial<AssistantApi>;\n  }, [store]);\n\n  return <AssistantProvider api={api}>{children}</AssistantProvider>;\n};\n"],"mappings":";;;AAEA,SAAS,eAAgD;AACzD;AAAA,EACE;AAAA,EAEA;AAAA,OACK;AAKP,SAAS,UAAU,eAAe;AAClC,SAAS,mBAAmB;AAC5B,SAAS,SAAS,cAAc;AA4CvB;AA1CT,IAAM,wBAAwB;AAAA,EAC5B,CAAC,EAAE,MAAM,UAAU,MAA4C;AAC7D,UAAM,QAAQ;AAAA,MACZ,OAAO;AAAA,QACL,MAAM;AAAA,QACN;AAAA,QACA,QAAQ,YAAY,EAAE,MAAM,UAAU,IAAI,EAAE,MAAM,WAAW;AAAA,MAC/D;AAAA,MACA,CAAC,MAAM,SAAS;AAAA,IAClB;AAEA,WAAO,OAA6B;AAAA,MAClC,UAAU,MAAM;AAAA,MAChB,eAAe,MAAM;AACnB,cAAM,IAAI,MAAM,eAAe;AAAA,MACjC;AAAA,MACA,uBAAuB,MAAM;AAAA,IAC/B,CAAC;AAAA,EACH;AACF;AAEO,IAAM,0BAKT,CAAC,EAAE,MAAM,YAAY,OAAO,SAAS,MAAM;AAC7C,QAAM,QAAQ;AAAA,IACZ,QAAQ,sBAAsB,EAAE,MAAM,UAAU,CAAC,CAAC;AAAA,EACpD;AACA,QAAM,MAAM,QAAQ,MAAM;AACxB,WAAO;AAAA,MACL,MAAM,wBAAwB;AAAA,QAC5B,QAAQ;AAAA,QACR,OAAO,CAAC;AAAA,QACR,KAAK,MAAM,MAAM,SAAS,EAAE;AAAA,MAC9B,CAAC;AAAA,MACD,WAAW,MAAM;AAAA,MACjB,WAAW,MAAM;AAAA,IACnB;AAAA,EACF,GAAG,CAAC,KAAK,CAAC;AAEV,SAAO,oBAAC,qBAAkB,KAAW,UAAS;AAChD;","names":[]}