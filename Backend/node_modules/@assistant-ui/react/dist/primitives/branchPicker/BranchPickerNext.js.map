{"version":3,"sources":["../../../src/primitives/branchPicker/BranchPickerNext.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\nconst useBranchPickerNext = () => {\n  const api = useAssistantApi();\n  const disabled = useAssistantState(\n    ({ message }) => message.branchNumber >= message.branchCount,\n  );\n\n  const callback = useCallback(() => {\n    api.message().switchToBranch({ position: \"next\" });\n  }, [api]);\n\n  if (disabled) return null;\n  return callback;\n};\n\nexport namespace BranchPickerPrimitiveNext {\n  export type Element = ActionButtonElement;\n  /**\n   * Props for the BranchPickerPrimitive.Next component.\n   * Inherits all button element props and action button functionality.\n   */\n  export type Props = ActionButtonProps<typeof useBranchPickerNext>;\n}\n\n/**\n * A button component that navigates to the next branch in the message tree.\n *\n * This component automatically handles switching to the next available branch\n * and is disabled when there are no more branches to navigate to.\n *\n * @example\n * ```tsx\n * <BranchPickerPrimitive.Next>\n *   Next â†’\n * </BranchPickerPrimitive.Next>\n * ```\n */\nexport const BranchPickerPrimitiveNext = createActionButton(\n  \"BranchPickerPrimitive.Next\",\n  useBranchPickerNext,\n);\n"],"mappings":";;;AAEA;AAAA,EAGE;AAAA,OACK;AACP,SAAS,mBAAmB;AAC5B,SAAS,mBAAmB,uBAAuB;AAEnD,IAAM,sBAAsB,MAAM;AAChC,QAAM,MAAM,gBAAgB;AAC5B,QAAM,WAAW;AAAA,IACf,CAAC,EAAE,QAAQ,MAAM,QAAQ,gBAAgB,QAAQ;AAAA,EACnD;AAEA,QAAM,WAAW,YAAY,MAAM;AACjC,QAAI,QAAQ,EAAE,eAAe,EAAE,UAAU,OAAO,CAAC;AAAA,EACnD,GAAG,CAAC,GAAG,CAAC;AAER,MAAI,SAAU,QAAO;AACrB,SAAO;AACT;AAwBO,IAAM,4BAA4B;AAAA,EACvC;AAAA,EACA;AACF;","names":[]}