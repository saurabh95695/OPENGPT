{"version":3,"sources":["../../../src/primitives/actionBar/ActionBarReload.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\n/**\n * Hook that provides reload functionality for action bar buttons.\n *\n * This hook returns a callback function that reloads/regenerates the current assistant message,\n * or null if reloading is not available (e.g., thread is running, disabled, or message is not from assistant).\n *\n * @returns A reload callback function, or null if reloading is disabled\n *\n * @example\n * ```tsx\n * function CustomReloadButton() {\n *   const reload = useActionBarReload();\n *\n *   return (\n *     <button onClick={reload} disabled={!reload}>\n *       {reload ? \"Reload Message\" : \"Cannot Reload\"}\n *     </button>\n *   );\n * }\n * ```\n */\nconst useActionBarReload = () => {\n  const api = useAssistantApi();\n\n  const disabled = useAssistantState(\n    (s) =>\n      s.thread.isRunning ||\n      s.thread.isDisabled ||\n      s.message.role !== \"assistant\",\n  );\n\n  const callback = useCallback(() => {\n    api.message().reload();\n  }, [api]);\n\n  if (disabled) return null;\n  return callback;\n};\n\nexport namespace ActionBarPrimitiveReload {\n  export type Element = ActionButtonElement;\n  /**\n   * Props for the ActionBarPrimitive.Reload component.\n   * Inherits all button element props and action button functionality.\n   */\n  export type Props = ActionButtonProps<typeof useActionBarReload>;\n}\n\n/**\n * A button component that reloads/regenerates the current assistant message.\n *\n * This component automatically handles reloading the current assistant message\n * and is disabled when reloading is not available (e.g., thread is running,\n * disabled, or message is not from assistant).\n *\n * @example\n * ```tsx\n * <ActionBarPrimitive.Reload>\n *   Reload Message\n * </ActionBarPrimitive.Reload>\n * ```\n */\nexport const ActionBarPrimitiveReload = createActionButton(\n  \"ActionBarPrimitive.Reload\",\n  useActionBarReload,\n);\n"],"mappings":";;;AAEA;AAAA,EAGE;AAAA,OACK;AACP,SAAS,mBAAmB;AAC5B,SAAS,mBAAmB,uBAAuB;AAuBnD,IAAM,qBAAqB,MAAM;AAC/B,QAAM,MAAM,gBAAgB;AAE5B,QAAM,WAAW;AAAA,IACf,CAAC,MACC,EAAE,OAAO,aACT,EAAE,OAAO,cACT,EAAE,QAAQ,SAAS;AAAA,EACvB;AAEA,QAAM,WAAW,YAAY,MAAM;AACjC,QAAI,QAAQ,EAAE,OAAO;AAAA,EACvB,GAAG,CAAC,GAAG,CAAC;AAER,MAAI,SAAU,QAAO;AACrB,SAAO;AACT;AAyBO,IAAM,2BAA2B;AAAA,EACtC;AAAA,EACA;AACF;","names":[]}