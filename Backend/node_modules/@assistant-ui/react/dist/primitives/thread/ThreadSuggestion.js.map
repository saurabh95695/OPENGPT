{"version":3,"sources":["../../../src/primitives/thread/ThreadSuggestion.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useAssistantState, useAssistantApi } from \"../../context\";\n\nconst useThreadSuggestion = ({\n  prompt,\n  autoSend,\n}: {\n  prompt: string;\n  method?: \"replace\";\n  autoSend?: boolean | undefined;\n}) => {\n  const api = useAssistantApi();\n  const disabled = useAssistantState(({ thread }) => thread.isDisabled);\n\n  const callback = useCallback(() => {\n    const isRunning = api.thread().getState().isRunning;\n    if (autoSend && !isRunning) {\n      api.thread().append(prompt);\n    } else {\n      api.composer().setText(prompt);\n    }\n  }, [api, autoSend, prompt]);\n\n  if (disabled) return null;\n  return callback;\n};\n\nexport namespace ThreadPrimitiveSuggestion {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useThreadSuggestion>;\n}\n\nexport const ThreadPrimitiveSuggestion = createActionButton(\n  \"ThreadPrimitive.Suggestion\",\n  useThreadSuggestion,\n  [\"prompt\", \"autoSend\", \"method\"],\n);\n"],"mappings":";;;AAEA;AAAA,EAGE;AAAA,OACK;AACP,SAAS,mBAAmB;AAC5B,SAAS,mBAAmB,uBAAuB;AAEnD,IAAM,sBAAsB,CAAC;AAAA,EAC3B;AAAA,EACA;AACF,MAIM;AACJ,QAAM,MAAM,gBAAgB;AAC5B,QAAM,WAAW,kBAAkB,CAAC,EAAE,OAAO,MAAM,OAAO,UAAU;AAEpE,QAAM,WAAW,YAAY,MAAM;AACjC,UAAM,YAAY,IAAI,OAAO,EAAE,SAAS,EAAE;AAC1C,QAAI,YAAY,CAAC,WAAW;AAC1B,UAAI,OAAO,EAAE,OAAO,MAAM;AAAA,IAC5B,OAAO;AACL,UAAI,SAAS,EAAE,QAAQ,MAAM;AAAA,IAC/B;AAAA,EACF,GAAG,CAAC,KAAK,UAAU,MAAM,CAAC;AAE1B,MAAI,SAAU,QAAO;AACrB,SAAO;AACT;AAOO,IAAM,4BAA4B;AAAA,EACvC;AAAA,EACA;AAAA,EACA,CAAC,UAAU,YAAY,QAAQ;AACjC;","names":[]}