{"version":3,"sources":["../../../src/primitives/message/MessageIf.tsx"],"sourcesContent":["\"use client\";\n\nimport type { FC, PropsWithChildren } from \"react\";\nimport { useAssistantState } from \"../../context\";\nimport type { RequireAtLeastOne } from \"../../utils/RequireAtLeastOne\";\n\ntype MessageIfFilters = {\n  user: boolean | undefined;\n  assistant: boolean | undefined;\n  system: boolean | undefined;\n  hasBranches: boolean | undefined;\n  copied: boolean | undefined;\n  lastOrHover: boolean | undefined;\n  last: boolean | undefined;\n  speaking: boolean | undefined;\n  hasAttachments: boolean | undefined;\n  hasContent: boolean | undefined;\n  submittedFeedback: \"positive\" | \"negative\" | null | undefined;\n};\ntype UseMessageIfProps = RequireAtLeastOne<MessageIfFilters>;\n\nconst useMessageIf = (props: UseMessageIfProps) => {\n  return useAssistantState(({ message }) => {\n    const {\n      role,\n      attachments,\n      parts,\n      branchCount,\n      isLast,\n      speech,\n      submittedFeedback,\n      isCopied,\n      isHovering,\n    } = message;\n\n    if (props.hasBranches === true && branchCount < 2) return false;\n\n    if (props.user && role !== \"user\") return false;\n    if (props.assistant && role !== \"assistant\") return false;\n    if (props.system && role !== \"system\") return false;\n\n    if (props.lastOrHover === true && !isHovering && !isLast) return false;\n    if (props.last !== undefined && props.last !== isLast) return false;\n\n    if (props.copied === true && !isCopied) return false;\n    if (props.copied === false && isCopied) return false;\n\n    if (props.speaking === true && speech == null) return false;\n    if (props.speaking === false && speech != null) return false;\n\n    if (\n      props.hasAttachments === true &&\n      (role !== \"user\" || !attachments?.length)\n    )\n      return false;\n    if (\n      props.hasAttachments === false &&\n      role === \"user\" &&\n      !!attachments?.length\n    )\n      return false;\n\n    if (props.hasContent === true && parts.length === 0) return false;\n    if (props.hasContent === false && parts.length > 0) return false;\n\n    if (\n      props.submittedFeedback !== undefined &&\n      (submittedFeedback?.type ?? null) !== props.submittedFeedback\n    )\n      return false;\n\n    return true;\n  });\n};\n\nexport namespace MessagePrimitiveIf {\n  export type Props = PropsWithChildren<UseMessageIfProps>;\n}\n\nexport const MessagePrimitiveIf: FC<MessagePrimitiveIf.Props> = ({\n  children,\n  ...query\n}) => {\n  const result = useMessageIf(query);\n  return result ? children : null;\n};\n\nMessagePrimitiveIf.displayName = \"MessagePrimitive.If\";\n"],"mappings":";;;AAGA,SAAS,yBAAyB;AAkBlC,IAAM,eAAe,CAAC,UAA6B;AACjD,SAAO,kBAAkB,CAAC,EAAE,QAAQ,MAAM;AACxC,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAEJ,QAAI,MAAM,gBAAgB,QAAQ,cAAc,EAAG,QAAO;AAE1D,QAAI,MAAM,QAAQ,SAAS,OAAQ,QAAO;AAC1C,QAAI,MAAM,aAAa,SAAS,YAAa,QAAO;AACpD,QAAI,MAAM,UAAU,SAAS,SAAU,QAAO;AAE9C,QAAI,MAAM,gBAAgB,QAAQ,CAAC,cAAc,CAAC,OAAQ,QAAO;AACjE,QAAI,MAAM,SAAS,UAAa,MAAM,SAAS,OAAQ,QAAO;AAE9D,QAAI,MAAM,WAAW,QAAQ,CAAC,SAAU,QAAO;AAC/C,QAAI,MAAM,WAAW,SAAS,SAAU,QAAO;AAE/C,QAAI,MAAM,aAAa,QAAQ,UAAU,KAAM,QAAO;AACtD,QAAI,MAAM,aAAa,SAAS,UAAU,KAAM,QAAO;AAEvD,QACE,MAAM,mBAAmB,SACxB,SAAS,UAAU,CAAC,aAAa;AAElC,aAAO;AACT,QACE,MAAM,mBAAmB,SACzB,SAAS,UACT,CAAC,CAAC,aAAa;AAEf,aAAO;AAET,QAAI,MAAM,eAAe,QAAQ,MAAM,WAAW,EAAG,QAAO;AAC5D,QAAI,MAAM,eAAe,SAAS,MAAM,SAAS,EAAG,QAAO;AAE3D,QACE,MAAM,sBAAsB,WAC3B,mBAAmB,QAAQ,UAAU,MAAM;AAE5C,aAAO;AAET,WAAO;AAAA,EACT,CAAC;AACH;AAMO,IAAM,qBAAmD,CAAC;AAAA,EAC/D;AAAA,EACA,GAAG;AACL,MAAM;AACJ,QAAM,SAAS,aAAa,KAAK;AACjC,SAAO,SAAS,WAAW;AAC7B;AAEA,mBAAmB,cAAc;","names":[]}