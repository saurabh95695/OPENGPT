{"version":3,"sources":["../../src/core/execution-context.ts"],"sourcesContent":["import { ResourceFiber } from \"./types\";\n\nlet currentResourceFiber: ResourceFiber<any, any> | null = null;\n\nexport function withResourceFiber<R, P>(\n  fiber: ResourceFiber<R, P>,\n  fn: () => void,\n): void {\n  fiber.currentIndex = 0;\n\n  const previousContext = currentResourceFiber;\n  currentResourceFiber = fiber;\n  try {\n    fn();\n\n    fiber.isFirstRender = false;\n\n    // ensure hook count matches\n    if (fiber.cells.length !== fiber.currentIndex) {\n      throw new Error(\n        `Rendered ${fiber.currentIndex} hooks but expected ${fiber.cells.length}. ` +\n          \"Hooks must be called in the exact same order in every render.\",\n      );\n    }\n  } finally {\n    currentResourceFiber = previousContext;\n  }\n}\nexport function getCurrentResourceFiber(): ResourceFiber<unknown, unknown> {\n  if (!currentResourceFiber) {\n    throw new Error(\"No resource fiber available\");\n  }\n  return currentResourceFiber;\n}\n"],"mappings":";AAEA,IAAI,uBAAuD;AAEpD,SAAS,kBACd,OACA,IACM;AACN,QAAM,eAAe;AAErB,QAAM,kBAAkB;AACxB,yBAAuB;AACvB,MAAI;AACF,OAAG;AAEH,UAAM,gBAAgB;AAGtB,QAAI,MAAM,MAAM,WAAW,MAAM,cAAc;AAC7C,YAAM,IAAI;AAAA,QACR,YAAY,MAAM,YAAY,uBAAuB,MAAM,MAAM,MAAM;AAAA,MAEzE;AAAA,IACF;AAAA,EACF,UAAE;AACA,2BAAuB;AAAA,EACzB;AACF;AACO,SAAS,0BAA2D;AACzE,MAAI,CAAC,sBAAsB;AACzB,UAAM,IAAI,MAAM,6BAA6B;AAAA,EAC/C;AACA,SAAO;AACT;","names":[]}