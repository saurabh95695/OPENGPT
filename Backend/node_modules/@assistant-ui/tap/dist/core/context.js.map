{"version":3,"sources":["../../src/core/context.ts"],"sourcesContent":["const contextValue: unique symbol = Symbol(\"tap.Context\");\ntype Context<T> = {\n  [contextValue]: T;\n};\n\nexport const createContext = <T>(defaultValue: T): Context<T> => {\n  return {\n    [contextValue]: defaultValue,\n  };\n};\n\nexport const withContextProvider = <T, TResult>(\n  context: Context<T>,\n  value: T,\n  fn: () => TResult,\n) => {\n  const previousValue = context[contextValue];\n  context[contextValue] = value;\n  try {\n    return fn();\n  } finally {\n    context[contextValue] = previousValue;\n  }\n};\n\nexport const tapContext = <T>(context: Context<T>) => {\n  return context[contextValue];\n};\n"],"mappings":";AAAA,IAAM,eAA8B,OAAO,aAAa;AAKjD,IAAM,gBAAgB,CAAI,iBAAgC;AAC/D,SAAO;AAAA,IACL,CAAC,YAAY,GAAG;AAAA,EAClB;AACF;AAEO,IAAM,sBAAsB,CACjC,SACA,OACA,OACG;AACH,QAAM,gBAAgB,QAAQ,YAAY;AAC1C,UAAQ,YAAY,IAAI;AACxB,MAAI;AACF,WAAO,GAAG;AAAA,EACZ,UAAE;AACA,YAAQ,YAAY,IAAI;AAAA,EAC1B;AACF;AAEO,IAAM,aAAa,CAAI,YAAwB;AACpD,SAAO,QAAQ,YAAY;AAC7B;","names":[]}